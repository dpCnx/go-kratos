<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e6e1e4eb-ae70-4737-9ce7-8a4cddc6ebe2" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/protoc-gen-gin-http/go.mod" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/Makefile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/api/v1/demo.pb.validate.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/api/v1/demo.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/api/v1/demo2.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/api/v1/demo2.pb.validate.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/api/v1/demo2.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/api/v1/demo2.swagger.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/api/v1/demo2_grpc.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/api/v1/demo2_http.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/api/v1/error_reason.pb.validate.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/api/v1/error_reason.swagger.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/internal/service/demo2.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/server/grpc.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/server/http.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/server/kratos.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/third_party/google/protobuf/duration.proto" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/wire_gen.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/server/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/server/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Makefile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/v1/demo.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/api/v1/demo.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/v1/demo.proto" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/v1/demo_grpc.pb.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/v1/error_reason.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/api/v1/error_reason.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/v1/error_reason.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/api/v1/error_reason.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/v1/error_reason_errors.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/api/v1/error_reason_errors.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/v2/demo.pb.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/v2/demo.proto" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/v2/demo.swagger.json" beforeDir="false" afterPath="$PROJECT_DIR$/server/api/v1/demo.swagger.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/v2/demo_grpc.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/api/v1/demo_grpc.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/v2/demo_http.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/api/v1/demo_http.pb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/client/client.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/client/client.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/conf/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/conf/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/server/config.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/server/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gen/demo/go.mod" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/gen/demo/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/protoc-gen-gin-http/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gen/demo/logic/LICENSE" beforeDir="false" afterPath="$PROJECT_DIR$/protoc-gen-gin-http/logic/LICENSE" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gen/demo/logic/http.go" beforeDir="false" afterPath="$PROJECT_DIR$/protoc-gen-gin-http/logic/http.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gen/demo/logic/http_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/protoc-gen-gin-http/logic/http_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gen/demo/logic/template.go" beforeDir="false" afterPath="$PROJECT_DIR$/protoc-gen-gin-http/logic/template.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gen/demo/logic/template_bank.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/gen/demo/logic/version.go" beforeDir="false" afterPath="$PROJECT_DIR$/protoc-gen-gin-http/logic/version.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gen/demo/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/protoc-gen-gin-http/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/server/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/server/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/model/d.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/internal/model/d.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/repo/d.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/internal/repo/d.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/repo/d_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/internal/repo/d_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/repo/data.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/internal/repo/data.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/service/demo.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/internal/service/demo.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/service/demo2.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/log/info.log" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/log/log.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/middleware/recover.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/middleware/recover.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/middleware/request.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/middleware/request.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/errors/errors.proto" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/etcd/etcd.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/pkg/etcd/etcd.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/gorm/trace.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/pkg/gorm/trace.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/jeager/jeager.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/pkg/jeager/jeager.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/errors/errors.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/errors/errors.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/google/api/annotations.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/google/api/annotations.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/google/api/any.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/google/api/any.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/google/api/api.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/google/api/api.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/google/api/client.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/google/api/client.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/google/api/descriptor.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/google/api/descriptor.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/google/api/duration.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/google/api/duration.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/google/api/empty.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/google/api/empty.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/google/api/field_behavior.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/google/api/field_behavior.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/google/api/field_mask.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/google/api/field_mask.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/google/api/http.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/google/api/http.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/google/api/httpbody.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/google/api/httpbody.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/google/api/source_context.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/google/api/source_context.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/google/api/struct.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/google/api/struct.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/google/api/timestamp.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/google/api/timestamp.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/google/api/type.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/google/api/type.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/google/api/wrappers.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/google/api/wrappers.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/google/protobuf/descriptor.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/google/protobuf/descriptor.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/google/protobuf/struct.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/google/protobuf/struct.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/google/protobuf/timestamp.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/google/protobuf/timestamp.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/protoc-gen-openapiv2/options/annotations.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/protoc-gen-openapiv2/options/annotations.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/protoc-gen-openapiv2/options/openapiv2.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/protoc-gen-openapiv2/options/openapiv2.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/validate/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/validate/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/third_party/validate/validate.proto" beforeDir="false" afterPath="$PROJECT_DIR$/server/third_party/validate/validate.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/wire.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/wire.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/wire_gen.go" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../gosdk" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="23PrtRcKhb3KOjW2rtLN4uQpo2C" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="configurable..is.expanded" value="false" />
    <property name="configurable.GoLibrariesConfigurable.is.expanded" value="true" />
    <property name="go.format.on.save.advertiser.fired" value="true" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.watchers.conflict.with.on.save.actions.check.performed" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="settings.editor.selected.configurable" value="go.vgo" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="F:\goprogect\go-kratos" />
      <recent name="F:\goprogect\go-kratos\internal\service" />
      <recent name="F:\goprogect\go-kratos\api" />
    </key>
  </component>
  <component name="RunManager">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="go-kratos" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="go-kratos" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
    <environment>
      <map>
        <entry key="GOPROXY" value="https://goproxy.io" />
      </map>
    </environment>
  </component>
</project>