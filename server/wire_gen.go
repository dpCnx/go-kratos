// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"go-kratos/conf"
	"go-kratos/internal/repo"
	"go-kratos/internal/server"
	"go-kratos/internal/service"
	"go-kratos/pkg/etcd"
	"go-kratos/pkg/jeager"
	"go-kratos/pkg/log"
)

// Injectors from wire.go:

func App() *server.Server {
	config := conf.LoadConfig()
	logger := log.NewLogger(config)
	db := repo.NewMysql(config, logger)
	client := repo.NewRedis(config, logger)
	data := repo.NewData(db, client)
	demo := service.NewDemo(data, logger)
	grpcServer := server.NewGrpcServer(config, logger, demo)
	httpServer := server.NewHTTPServer(config, logger, demo)
	registry := etcd.NewEtcd(logger, config)
	tracerDownFunc := jeager.TracerProvider(logger, config)
	serverServer := server.NewServer(grpcServer, httpServer, registry, config, tracerDownFunc)
	return serverServer
}

// wire.go:

var providerSet = wire.NewSet(conf.LoadConfig, log.NewLogger, jeager.TracerProvider, etcd.NewEtcd, repo.NewMysql, repo.NewRedis, repo.NewData, service.NewDemo, server.NewHTTPServer, server.NewGrpcServer, server.NewServer)
